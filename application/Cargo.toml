[package]
edition = "2021"
name = "neopixel-firmware"
version = "0.1.0"
authors = ["Ulf Lilleengen <lulf@redhat.com>"]
resolver = "2"

[dependencies]
defmt = { version = "0.3", optional = true }
panic-probe = { version = "0.3", features = ["print-defmt"], optional = true }

num = { version = "0.4", default-features = false }

# For uart logging
log = { version = "0.4", optional = true }
panic-reset = { version = "0.1.1", optional = true }

cortex-m = { version = "0.7", features = ["inline-asm"] }
cortex-m-rt = "0.7"

embassy = { version = "0.1.0", default-features = false, features = ["defmt"] }
embassy-nrf = { version = "0.1.0", default-features = false, features = ["nrf52840", "time-driver-rtc1", "gpiote", "unstable-pac", "unstable-traits"] }
embassy-boot-nrf = { version = "0.1.0", features = ["softdevice"] }
embassy-boot = { version = "0.1.0" }
embedded-hal = { version = "0.2", features = ["unproven"] }
ector = { version = "0.1.0", default-features = false }
futures = { version = "0.3.17", default-features = false, features = ["async-await"] }

nrf-softdevice = { version = "0.1.0", features = ["ble-peripheral", "ble-central", "ble-gatt-server", "s140", "nrf52840", "critical-section-impl"] }
nrf-softdevice-s140 = { version = "0.1.0" }
nrf-softdevice-defmt-rtt = { version = "0.1.0", optional = true }

bitflags = { version = "1.3", default-features = false }
heapless = "0.7"
cfg-if = "1.0.0"
strum = { version = "0.24", default-features = false, features = ["derive"] }

#nrf-smartled = { version = "0.5.0", features= ["52840"] }
#choreographer = "0.0.4"

[dependencies.drogue-device]
version = "0.1.0"
default-features = false
features = [
    "time",
    "neopixel",
    "nrf",
    "ble+nrf52840"
]

[dependencies.palette]
version = "0.6"
default-features = false
features = ["libm"] # Uses libm instead of std for floating point math

[features]
default = ["panic-reset", "with_defmt"]
lsm = []
with_defmt = [
    "defmt",
    "nrf-softdevice-defmt-rtt",
    "embassy/defmt",
    "drogue-device/defmt",
    "panic-probe",
    "embassy-boot-nrf/defmt",
    "nrf-softdevice/defmt",
]
with_log = [
    "log",
    "panic-reset",
]
